// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Argoproj.V1Alpha1
{

    /// <summary>
    /// ResourceResult holds the operation result details of a specific resource
    /// </summary>
    public class ApplicationStatusOperationStateSyncResultResourcesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Group specifies the API group of the resource
        /// </summary>
        [Input("group", required: true)]
        public Input<string> Group { get; set; } = null!;

        /// <summary>
        /// HookPhase contains the state of any operation associated with this resource OR hook This can also contain values for non-hook resources.
        /// </summary>
        [Input("hookPhase")]
        public Input<string>? HookPhase { get; set; }

        /// <summary>
        /// HookType specifies the type of the hook. Empty for non-hook resources
        /// </summary>
        [Input("hookType")]
        public Input<string>? HookType { get; set; }

        /// <summary>
        /// Kind specifies the API kind of the resource
        /// </summary>
        [Input("kind", required: true)]
        public Input<string> Kind { get; set; } = null!;

        /// <summary>
        /// Message contains an informational or error message for the last sync OR operation
        /// </summary>
        [Input("message")]
        public Input<string>? Message { get; set; }

        /// <summary>
        /// Name specifies the name of the resource
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Namespace specifies the target namespace of the resource
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        /// <summary>
        /// Status holds the final result of the sync. Will be empty if the resources is yet to be applied/pruned and is always zero-value for hooks
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// SyncPhase indicates the particular phase of the sync that this result was acquired in
        /// </summary>
        [Input("syncPhase")]
        public Input<string>? SyncPhase { get; set; }

        /// <summary>
        /// Version specifies the API version of the resource
        /// </summary>
        [Input("version", required: true)]
        public Input<string> Version { get; set; } = null!;

        public ApplicationStatusOperationStateSyncResultResourcesArgs()
        {
        }
        public static new ApplicationStatusOperationStateSyncResultResourcesArgs Empty => new ApplicationStatusOperationStateSyncResultResourcesArgs();
    }
}
